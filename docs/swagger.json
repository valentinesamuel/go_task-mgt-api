{
    "swagger": "2.0",
    "info": {
        "description": "API for managing tasks and users in the system",
        "title": "Task Management API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Retrieve a list of all tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve tasks",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new task and stores it in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task details",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or validation error",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create task",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Retrieve a task by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve task",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing task by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or validation error",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update task",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing task by ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete task",
                        "schema": {
                            "$ref": "#/definitions/pkg.SwaggerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Priority": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high"
            ],
            "x-enum-varnames": [
                "PriorityLow",
                "PriorityMedium",
                "PriorityHigh"
            ]
        },
        "models.Status": {
            "type": "string",
            "enum": [
                "todo",
                "in_progress",
                "done"
            ],
            "x-enum-varnames": [
                "StatusTodo",
                "StatusInProgress",
                "StatusDone"
            ]
        },
        "models.Task": {
            "type": "object",
            "required": [
                "priority",
                "status",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 100
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Priority"
                        }
                    ]
                },
                "status": {
                    "enum": [
                        "todo",
                        "in_progress",
                        "done"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Status"
                        }
                    ]
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg.SwaggerErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pkg.SwaggerSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}